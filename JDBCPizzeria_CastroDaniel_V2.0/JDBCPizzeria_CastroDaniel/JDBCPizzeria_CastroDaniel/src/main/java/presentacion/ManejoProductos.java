/**
 *
 */
package presentacion;

import dao.Conexion;
import interfaces.IConexion;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import negocio.ProductosNegocio;
import objetos.Producto;

/**
 *
 * @author Daniel
 */
public class ManejoProductos extends javax.swing.JFrame {

    private ProductosNegocio productosNegocio;
    private Producto productoSeleccionado;

    /**
     * Creates new form ManejoProductos
     */
    public ManejoProductos() {
        IConexion conexion = new Conexion();
        productosNegocio = new ProductosNegocio(conexion);

        initComponents();
        
        this.setLocationRelativeTo(null);

        cargarProductosEnTabla();

        tblProductos.getSelectionModel().addListSelectionListener(ManejoProductos.this::tblProductosValueChanged);
    }

    private void cargarProductosEnTabla() {
        // Obtener los productos de la capa de negocio
        List<Producto> productos = productosNegocio.obtenerProductos();

        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();
        modelo.setRowCount(0);

        // Llenar la tabla con los datos de los productos
        for (Producto producto : productos) {
            modelo.addRow(new Object[]{
                producto.getId(),
                producto.getNombre(),
                producto.getDescripcion(),
                producto.getPrecio()
            });
        }
    }

    private void limpiarCampos() {
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtPrecio.setText("");
        tblProductos.clearSelection();
    }

    private void resetBotones() {
        btnGuardar.setText("Guardar");
        btnCancelar.setText("Cancelar");
        productoSeleccionado = null;
    }

    private void tblProductosValueChanged(javax.swing.event.ListSelectionEvent evt) {
        // Verificar que se ha seleccionado una fila
        if (!evt.getValueIsAdjusting() && tblProductos.getSelectedRow() != -1) {
            // Obtener el producto seleccionado
            int filaSeleccionada = tblProductos.getSelectedRow();
            int idProducto = (int) tblProductos.getValueAt(filaSeleccionada, 0); // La primera columna es el ID

            // Obtener el producto desde la capa de negocio usando su ID
            Producto productoSeleccionado = productosNegocio.obtenerProductoPorId(idProducto);

            // Llenar los campos de texto con la información del producto
            txtNombre.setText(productoSeleccionado.getNombre());
            txtDescripcion.setText(productoSeleccionado.getDescripcion());
            txtPrecio.setText(String.valueOf(productoSeleccionado.getPrecio()));

            // Cambiar el texto de los botones
            btnGuardar.setText("Actualizar");
            btnCancelar.setText("Eliminar");

            // Guardar el ID del producto seleccionado en una variable para usarlo después
            this.productoSeleccionado = productoSeleccionado;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombre = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNombre.setText("Nombre");

        lblDescripcion.setText("Descripción");

        lblPrecio.setText("Precio");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Descripción", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(118, 118, 118)
                                        .addComponent(lblNombre))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addComponent(lblDescripcion)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDescripcion, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnCancelar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnGuardar)))))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(lblPrecio))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPrecio)
                        .addGap(4, 4, 4)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnCancelar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        if (btnCancelar.getText().equals("Eliminar")) {
            // Verificamos que hay un producto seleccionado.
            if (productoSeleccionado != null) {
                // Mostramos un mensaje de confirmación de la eliminación.
                int confirmacion = javax.swing.JOptionPane.showConfirmDialog(this,
                        "¿Estás seguro de que deseas eliminar este producto?", "Confirmación",
                        javax.swing.JOptionPane.YES_NO_OPTION);

                if (confirmacion == javax.swing.JOptionPane.YES_OPTION) {
                    // Eliminamos el producto seleccionado de la base de datos.
                    productosNegocio.eliminarProducto(productoSeleccionado.getId());

                    // Mostrar mensaje de éxito de eliminación del producto.
                    javax.swing.JOptionPane.showMessageDialog(this, "Producto eliminado exitosamente.");

                    // Actualizamos la tabla de productos con los productos que aún estén registrados.
                    cargarProductosEnTabla();

                    // Limpiamos los campos y regresamos los botones iniciales de Cancelar y Guardar.
                    limpiarCampos();
                    resetBotones();
                }
            } else {
                // Mensaje de error si no hay producto seleccionado.
                javax.swing.JOptionPane.showMessageDialog(this, "No hay producto seleccionado para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // En modo "Cancelar", limpiamos los campos.
            limpiarCampos();
            resetBotones();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (btnGuardar.getText().equals("Guardar")) {
            // Código para guardar un nuevo producto (ya lo tienes)
            try {
                String nombre = txtNombre.getText();
                String descripcion = txtDescripcion.getText();
                float precio = Float.parseFloat(txtPrecio.getText());

                Producto nuevoProducto = new Producto();
                nuevoProducto.setNombre(nombre);
                nuevoProducto.setDescripcion(descripcion);
                nuevoProducto.setPrecio(precio);

                productosNegocio.agregarProducto(nuevoProducto);
                cargarProductosEnTabla();

                javax.swing.JOptionPane.showMessageDialog(this, "Producto guardado exitosamente.");
                limpiarCampos();
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "El precio debe ser un número válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else if (btnGuardar.getText().equals("Actualizar")) {
            // Código para actualizar el producto
            try {
                productoSeleccionado.setNombre(txtNombre.getText());
                productoSeleccionado.setDescripcion(txtDescripcion.getText());
                productoSeleccionado.setPrecio(Float.parseFloat(txtPrecio.getText()));

                productosNegocio.actualizarProducto(productoSeleccionado);
                cargarProductosEnTabla();

                javax.swing.JOptionPane.showMessageDialog(this, "Producto actualizado exitosamente.");
                limpiarCampos();
                resetBotones();
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "El precio debe ser un número válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManejoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManejoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManejoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManejoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManejoProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
